// Generated by CoffeeScript 1.6.2
(function() {
  var lastPage, setTabConnection, tabConnections;

  lastPage = "";

  tabConnections = {};

  chrome.storage.local.get("tabConnections", function(result) {
    if (result.tabConnections != null) {
      return tabConnections = result.tabConnections;
    }
  });

  chrome.tabs.onUpdated.addListener(function(tabId, changeInfo, tab) {
    if (changeInfo.status === "complete") {
      return setTabConnection(tab.url, tab.openerTabId);
    }
  });

  setTabConnection = function(newTabUrl, openerTabId) {
    var visit;

    visit = 0;
    if (typeof openerTabId !== "undefined") {
      return chrome.tabs.get(openerTabId, function(tab) {
        if (tab.url !== "chrome://newtab/" && newTabUrl !== "chrome://newtab/") {
          return chrome.history.getVisits({
            url: newTabUrl
          }, function(visitItems) {
            if (visitItems.length > 0) {
              visit = visitItems[visitItems.length - 1].visitId;
              return chrome.history.getVisits({
                url: tab.url
              }, function(visitItems) {
                tabConnections[visit] = visitItems[visitItems.length - 1].visitId;
                return chrome.storage.local.set({
                  "tabConnections": tabConnections
                });
              });
            }
          });
        }
      });
    }
  };

  chrome.webNavigation.onCommitted.addListener(function(details) {
    if (details.transitionQualifiers) {
      if (details.transitionQualifiers === "forward_back") {
        return lastPage = details.url;
      }
    }
  });

  /* Query for getting all Tabs at once
  chrome.tabs.query {}, (Tabs) ->
    console.log Tabs
  
  # synchronise Storage of Tabinfo
  syncTabs = ->
    chrome.storage.local.set "tabs":tabArray
  
  chrome.webNavigation.onBeforeNavigate.addListener (details) ->
    console.log details
  */


}).call(this);
