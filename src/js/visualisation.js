// Generated by CoffeeScript 1.6.2
(function() {
  window.hv = window.hv || {};

  window.hv.Visualisation = function() {
    var renderItem, toggleActiveState;

    this.specialise = function(site) {
      var context, shorten, special, title, url;

      url = site.url;
      title = site.title;
      context = void 0;
      special = void 0;
      if (((url.substr(-4)) === ".jpg") || ((url.substr(-4)) === ".png") || ((url.substr(-5)) === ".jpeg")) {
        special = "image";
        title = "Abbildung";
      } else if ((/youtube/.test(url)) && (/watch/.test(url))) {
        title = title.split("- YouTube")[0];
        if (v_max > 0) {
          url = "https://www.youtube.com/embed/" + url.split("v=")[1].split('=')[0].split('&')[0];
          special = "video";
          v_max--;
        }
      } else if (/Google-Suche/.test(title)) {
        special = "google";
      } else if (/mail.google.com/.test(url)) {
        special = "mail";
      }
      title = title.split(" - ")[0];
      title = title.split(" â€“ ")[0];
      shorten = 20;
      title = title.length > shorten ? title.substr(0, shorten) + "..." : title;
      site.url = url;
      site.title = title;
      site.special = special;
      if (title === "") {
        special = "empty";
        return site.title = url;
      } else {
        return renderItem(site);
      }
    };
    renderItem = function(item) {
      var bid, c, clear, content_div, context, createButton, favicon, head_div, info, info1, info2, inhalt, link, panel_div, pic, qtl, ref, relevance, sid, special, title, ttl, type, url, utl, v, vid, videoframe;

      title = item.title;
      url = item.url;
      sid = item.sid;
      vid = item.vid;
      type = item.type;
      bid = item.bid;
      special = item.special;
      ref = item.ref;
      relevance = item.relevance;
      panel_div = $("<div>");
      panel_div.addClass("panel");
      panel_div.addClass(type);
      if (item.nav != null) {
        panel_div.addClass(item.nav);
      }
      if (ref === "0") {
        panel_div.addClass("refzero");
      }
      if (relevance > 20) {
        panel_div.addClass("rel_big");
      } else if (relevance > 5) {
        panel_div.addClass("rel_some");
      } else if (relevance >= 2) {
        panel_div.addClass("rel_twice");
      }
      head_div = $("<div>");
      content_div = $("<div>");
      content_div.addClass("content");
      head_div.addClass("head");
      favicon = $("<img>");
      favicon.attr({
        src: "chrome://favicon/" + url
      });
      favicon.addClass("favicon");
      head_div.append($(favicon));
      if (special !== "google" && special !== "empty") {
        createButton = function(item, c) {
          var button;

          button = $("<button>");
          button.addClass(c);
          button.text("");
          button.on("click", function() {
            return bookmarkIt(item, c);
          });
          return head_div.append($(button));
        };
        for (c in storedContexts) {
          v = storedContexts[c];
          createButton(item, c);
        }
      }
      clear = $("<div>");
      clear.addClass("clear");
      head_div.append($(clear));
      if (blockStyle[blocks[item.sid]] != null) {
        context = blockStyle[blocks[item.sid]];
        head_div.addClass(context);
        panel_div.addClass(context);
      } else {
        panel_div.addClass("nocontext");
      }
      if (item.bookmark !== void 0) {
        context += " bookmark";
        content_div.addClass(context + " bookmark");
      }
      link = $("<a>");
      inhalt = $("<p>");
      link.attr({
        href: url
      });
      link.addClass("urladress");
      if (filter.query !== "") {
        qtl = filter.query.toLowerCase();
        ttl = title.toLowerCase();
        utl = url.toLowerCase();
        if (ttl.indexOf(qtl) < 0 && utl.indexOf(qtl) > 0) {
          panel_div.addClass("lessimportant");
        } else if (ttl.indexOf(qtl) < 0 && utl.indexOf(qtl) < 0) {
          panel_div.addClass("unimportant");
        }
      }
      if (special === "image") {
        pic = $("<img>");
        pic.attr({
          src: url.substr(url.search(/http/))
        });
        pic.addClass("imgpreview");
        inhalt.append(pic);
        link.append($(inhalt));
      } else if (special === "google") {
        title = title.split(" - Google-Suche")[0];
        inhalt.text(title);
        inhalt.attr({
          id: sid
        });
        link.append($(inhalt));
      } else if (special === "video") {
        videoframe = $("<iframe>");
        videoframe.addClass("youtubevideo");
        videoframe.attr({
          src: url
        });
        content_div.append(videoframe);
      } else {
        inhalt.text(title);
        inhalt.attr({
          id: sid
        });
        link.append($(inhalt));
      }
      info = $("<p>");
      info.addClass("devinfo");
      info.text("Block: " + item.block);
      info1 = $("<p>");
      info1.addClass("devinfo");
      info1.text(sid + " > " + item.sidref);
      info2 = $("<p>");
      info2.addClass("devinfo");
      info2.text(vid + " > " + ref);
      content_div.append($(link));
      content_div.append($(info));
      content_div.append($(info1));
      content_div.append($(info2));
      panel_div.addClass(special);
      panel_div.append(head_div);
      panel_div.append($(content_div));
      return $("#historycontent").append($(panel_div));
    };
    return toggleActiveState = function(context) {
      var contextClass, toggleBookmark, toggleContext;

      toggleContext = ".bcontext." + context;
      $(toggleContext).toggleClass("contextactivestate");
      toggleBookmark = "." + context + " .bookmark";
      $(toggleBookmark).toggle("fast");
      contextClass = "#historycontent ." + context;
      return $(contextClass).toggle("fast");
    };
  };

}).call(this);
