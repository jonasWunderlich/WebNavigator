// Generated by CoffeeScript 1.6.2
(function() {
  var bmarks, createBlocks, createHistory, filter, initSlider, max, min, phistory, reload, start, tabArray, v_max;

  v_max = 10;

  filter = {
    results: 50,
    time: 0,
    query: "",
    mode: "none"
  };

  min = 30;

  max = 500;

  bmarks = 0;

  phistory = 0;

  tabArray = {};

  $(document).ready(function() {
    chrome.storage.local.get("query", function(result) {
      if (result.query != null) {
        filter.query = result.query;
        return $("#search").val(result.query);
      }
    });
    $("#search").change(function() {
      filter.query = $('#search').val();
      $("#historycontent").empty();
      chrome.storage.local.set({
        "query": filter.query
      });
      return reload();
    });
    $("#bookmarklist").on("click", "h2", function() {
      var context;

      context = $(this).context.className.split(" ")[0];
      toggleActiveState(context);
      if (context !== "nocontext") {
        if (storedContexts[context].active) {
          storedContexts[context].active = false;
        } else {
          storedContexts[context].active = true;
        }
        chrome.storage.local.set({
          "storedContexts": storedContexts
        });
      }
      return null;
    });
    chrome.storage.local.get("hSlider", function(result) {
      if (result.hSlider != null) {
        return initSlider(0);
      } else {
        return initSlider(0);
      }
    });
    start();
    return null;
  });

  createBlocks = function() {
    var $contextgroup, blockdings, contextGroup, item, key, num, _results;

    num = blockSum + 1;
    while (num -= 1) {
      contextGroup = $("<div>");
      contextGroup.addClass("contextgroup");
      contextGroup.addClass("nocontext");
      contextGroup.addClass("group" + num);
      $("#historycontent").append($(contextGroup));
    }
    blockdings = blockSum + 1;
    siteHistory.sort(function(a, b) {
      if (a.vid <= b.vid) {
        return 1;
      } else {
        return -1;
      }
    });
    _results = [];
    for (key in siteHistory) {
      item = siteHistory[key];
      $contextgroup = $(".group" + item.block);
      if (item.context !== "" && !$contextgroup.hasClass(item.context)) {
        $contextgroup.addClass(item.context);
        $contextgroup.removeClass("nocontext");
        if (!storedContexts[item.context].active) {
          $contextgroup.hide();
        }
      }
      if (blockdings > item.block) {
        blockdings--;
      }
      specialise(item, $contextgroup);
      if (item.context !== "") {
        _results.push($(".group" + item.block + " .panel .head").css("background", storedContexts[item.context].color));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  createHistory = function() {
    chrome.tabs.query({}, function(tabs) {
      var i, _i, _len, _results;

      _results = [];
      for (_i = 0, _len = tabs.length; _i < _len; _i++) {
        i = tabs[_i];
        _results.push(tabArray[i.url] = i.id);
      }
      return _results;
    });
    return loadHistory(createBlocks);
  };

  start = function() {
    return loadBookmarks(createHistory);
  };

  initSlider = function(hSlider) {
    var query_slider;

    return query_slider = new Dragdealer('simple-slider', {
      x: hSlider,
      steps: max,
      callback: function(x) {
        filter.results = parseInt((max - min) * query_slider.value.current[0] + min);
        chrome.storage.local.set({
          "hSlider": x
        });
        return reload();
      },
      animationCallback: function(x) {
        return $("#handle_amount").text(parseInt((max - min) * x + min));
      }
    });
  };

  reload = function() {
    $('#historycontent').empty();
    $('#bookmarklist').empty();
    v_max = 5;
    start();
    return null;
  };

}).call(this);
