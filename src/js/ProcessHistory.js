// Generated by CoffeeScript 1.6.2
(function() {
  var block, blockId, blockStyle, blockSum, blocks, createBlocks, idToRef, idToVid, lastUrl, lastVid, loadHistory, logInfo, processHistoryItems, processVisitItems, processed, siteHistory, tabconnections, visitIdAufSID;

  processed = 0;

  tabconnections = [];

  block = 0;

  lastVid = 0;

  lastUrl = "";

  siteHistory = [];

  idToRef = {};

  idToVid = {};

  visitIdAufSID = [];

  blockId = 0;

  blocks = {};

  blockSum = 0;

  blockStyle = [];

  loadHistory = function(callbackFn) {
    return chrome.storage.local.get("tabConnections", function(result) {
      if (result.tabConnections) {
        tabconnections = result.tabConnections;
      } else {
        tabconnections = [];
      }
      return processHistoryItems(callbackFn);
    });
  };

  processHistoryItems = function(callbackFn) {
    var date, daydate, endtime, microsecondsPerDay, mode, starttime, time;

    time = filter.time;
    mode = filter.mode;
    processed = 0;
    date = new Date();
    daydate = date.getTime() - ((((date.getHours() + 1) * 60 + date.getMinutes()) * 60 + date.getSeconds()) * 1000);
    microsecondsPerDay = 1000 * 60 * 60 * 24;
    endtime = daydate - (microsecondsPerDay * (time - 1));
    starttime = daydate - (microsecondsPerDay * (30 + time));
    return chrome.history.search({
      text: filter.query,
      startTime: starttime,
      endTime: endtime,
      maxResults: filter.results
    }, function(historyItems) {
      return (historyItems.reverse()).forEach(function(site) {
        processed++;
        return chrome.history.getVisits({
          url: site.url
        }, function(visitItems) {
          return processVisitItems(site, visitItems, callbackFn);
        });
      });
    });
  };

  processVisitItems = function(site, visitItems, callbackFn) {
    var context, count, i, id, ref, referrer, siteItem, tab, time, type, vid, vids, _i, _len;

    referrer = vids = [];
    id = site.id;
    vid = visitItems[visitItems.length - 1].visitId;
    ref = visitItems[visitItems.length - 1].referringVisitId;
    type = visitItems[visitItems.length - 1].transition;
    time = visitItems[visitItems.length - 1].visitTime;
    count = site.visitCount;
    for (_i = 0, _len = visitItems.length; _i < _len; _i++) {
      i = visitItems[_i];
      if (i.visitId > vid - 300) {
        if (tabconnections[i.visitId] != null) {
          referrer.push(tabconnections[+i.visitId]);
        }
        if (i.referringVisitId !== "0") {
          referrer.push(i.referringVisitId);
        }
        visitIdAufSID[i.visitId] = id;
      }
    }
    idToRef[id] = referrer;
    if (type === "link" && (lastVid === ref || lastUrl === site.url.substr(0, 10))) {
      null;
    } else {
      block++;
    }
    lastVid = vid;
    lastUrl = site.url.substr(0, 10);
    context = bookMarks[site.url] != null ? bookMarks[site.url].context : "";
    tab = tabArray[site.url] != null ? tabArray[site.url] : "";
    siteItem = {
      sid: id,
      vid: vid,
      url: site.url,
      title: site.title,
      type: type,
      ref: ref,
      relevance: count,
      time: time,
      block: block,
      context: context,
      tab: tab
    };
    siteHistory[id] = siteItem;
    processed--;
    if (processed === 0) {
      blockSum = block;
      return callbackFn();
    }
  };

  logInfo = function(infoarray) {
    var i, info, k, siteinfo;

    siteinfo = $("<div>");
    for (k in infoarray) {
      i = infoarray[k];
      info = $("<div>");
      info.text(i);
      info.addClass("infotext");
      if (k === "0") {
        info.addClass("title");
      }
      siteinfo.append($(info));
    }
    return $("#historycontent").append($(siteinfo));
  };

  createBlocks = function() {
    var i, id, k, s, v, val, _i, _j, _len, _len1, _ref;

    block = 1;
    for (id in siteHistory) {
      val = siteHistory[id];
      processed++;
      _ref = idToRef[id];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        v = _ref[_i];
        processed++;
        if (visitIdAufSID[v] != null) {
          if (siteHistory[visitIdAufSID[v]].block !== 0) {
            if (val.block !== 0) {
              for (_j = 0, _len1 = siteHistory.length; _j < _len1; _j++) {
                s = siteHistory[_j];
                if (s.block === val.block) {
                  s.block = siteHistory[visitIdAufSID[v]].block;
                }
              }
            }
            val.block = siteHistory[visitIdAufSID[v]].block;
          } else {
            if (val.block === 0) {
              siteHistory[visitIdAufSID[v]].block = val.block = block;
              block++;
            } else {
              siteHistory[visitIdAufSID[v]].block = val.block;
            }
          }
        }
        processed--;
      }
      if (val.block === 0 || idToRef[id].length === 0) {
        val.block = block;
        block++;
      }
      processed--;
    }
    if (processed === 0) {
      for (k in siteHistory) {
        i = siteHistory[k];
        null;
      }
    }
    return null;
  };

  null;

}).call(this);
